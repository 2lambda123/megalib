#!/bin/bash

# Some preferences:

USER="megax"
HOST="sun6"
RHOME="/afs/ipp-garching.mpg.de/mpe/gamma/u/megax"   #of course we could also find that out
SSHWRAP="/home/megax/MEGAlib/bin/sshwrap"           #where do we find sshwrap?
PASSWD=""

# No user-servicable parts below here


#Do some errortrapping:

#Usage
if [ $# -lt 1 ]; then
 cat <<EOM
 $0: Backup-script. Backs up a whole bunch of
          directories, each to its own tgz.
          Copies tgz to remote host (eg sun6,
          hardcoded to script, but easy to change)
          Moves tgz to correct destination
          (so the tape robot finds them)
          Adds links, so the user finds them
          (currently links to ~megax/Daten/Mess)
 
 USAGE:  $0 dirs
 
EOM
 exit 1
fi 


#sshwrap found?
if [ ! -x $SSHWRAP ] ; then 
 if ! (SSHWRAP=$(which sshwrap 2>/dev/null) ) ; then
 cat <<EOM
 $0 Error: Couldnt find sshwrap.
 Please set apropriate path in $(which $0) 
 or make sure sshwrap is in PATH
EOM
 exit 1
 fi
fi


#host found?
if ! (host $HOST &>/dev/null); then
cat <<EOM
 $0 Error: Couldnt find host $HOST
 Please add correct host in $(which $0)
EOM
exit 1
fi

PREFIX="foo"
LASTPREFIX="bar"

#Start main Loop over all the directories given as cmdline options

for DIR in $* ; do
 echo checking $DIR
 
  if [ ! -d $DIR ]; then
    #bail out if $DIR is no dir!
    echo $DIR is not a Directory... skipping!
    continue
  fi  
  if (echo $DIR|grep -v ".*\/\([[:digit:]]\{4\}\)\([[:digit:]]\{2\}\).*">/dev/null); then
      #bail out if there is no datestring at the beginning of the name
      echo $DIR has no recognizable datestring... skipping!
      continue
  fi
  #$DIR seems to contain a valid directory.
  #cut the "2003-03" out of /data/20030310_173221_PointSource... 
  LASTPREFIX=$PREFIX
  PREFIX=$(echo $DIR|sed -n 's/.*\/\([[:digit:]]\{4\}\)\([[:digit:]]\{2\}\).*/\1-\2/p')
  FILE=$(basename $DIR)


  #read in password only _once_!   
  if [ -z $PASSWD ];then
   read -p "$USER@$HOST Password: " -s PASSWD      
   echo
  fi

  #fetch remote dir only if Prefix changed:
  if [ $LASTPREFIX != $PREFIX ]; then
    echo -n "Fetching Listing for $PREFIX from $HOST..."
    #Okay, this has gotten a little bit complicated, so I'll explain. 
    #What happens is this:
    #
    #sshwrap tries to login. If there is a wrong pw, sshwrap
    #bails out and outputs "no_acc" to RLS. We check that later
    #to do a correct error-handling.
    #
    #The output of sshwrap has to be reformatted by sed
    #before it can be saved to the RLS (we can't do that formatting
    #later). The exit-value of a pipe is that of the last command, in 
    #this case that of sed, and _not_ that of sshwrap. That is 
    #why we have to "smuggle in" the "||exit" (which exits only
    #the local context, ie the command substitution $()
    #
    RLS=$(\
     (\
      $SSHWRAP $USER@$HOST $PASSWD "\
      ls -sL Daten/Mess/$PREFIX" \
      || exit\
     )\
     |sed 's/.$//'\
    )
    if [ "$RLS" = "no_acc" ];then
     echo -e "\n$USER@$HOST: Wrong password!\n"
     exit 1
    fi 
    echo done
  fi
  
  #now check if $DIR is already _correctly_ tgz'ed to sun6:
  if (echo $RLS|grep $FILE >/dev/null);then  #is it there?
    if [ $(echo $RLS|sed -n "s/.* \([[:digit:]]\+\) $(basename $DIR).*/\1/p") = 0 ]; then 
      #is it incorrect? (Size=0)
      SKIP=NO
      echo Backup of $DIR has zero size, backing up again
    else
      SKIP=YES
      echo No Backup of $DIR needed
    fi
  else 
    echo $DIR needs backup
    SKIP=NO
  fi  


# Do Backup if needed
if [ $SKIP = NO ];then

  echo -n "taring $DIR to $HOST... "
  pushd $DIR >/dev/null ; cd ..   # We cd to the dir, so the tar has correct dirs set
                                  # pipe the tgz directly to the remote machine
  tar -czf - $FILE | \
  ncftpput -c -u $USER -p $PASSWD $HOST "/tmp/$FILE.tgz" 
  popd >/dev/null;                # Go back to the dir we came from.
  echo "done"

  # Okay, now the File is safe and sound on the other machine, but it is in
  # /tmp. We now have to copy the file on the remote machine to the correct 
  # dir and set the appropriate link.

  # put everything into one line, and execute that line with sshwrap:

  echo -n "creating links on $HOST... "
  $SSHWRAP $USER@$HOST $PASSWD "\
  mv /tmp/$FILE.tgz $RHOME/MDataTree/Mess; \
  test -d $RHOME/Daten/Mess/$PREFIX || \
    mkdir $RHOME/Daten/Mess/$PREFIX; \
  ln -s $RHOME/MDataTree/Mess/$FILE.tgz $RHOME/Daten/Mess/$PREFIX" \
  >/dev/null
  echo done  

  # Now everything _should_ be done. We do one last check, and simply
  # warn the user if something's up.

  echo "checking if everything worked:"
  echo -n "getting Listing... "
  CHK=$(\
   $SSHWRAP $USER@$HOST $PASSWD "\
   ls -sL Daten/Mess/$PREFIX" |\
   grep -v "reading /afs/rzg/mpe/gamma/u/megax/.login"|sed 's/.$//'\
   )
  echo done
  
  #now check if $DIR is already _correctly_ tgz'ed to sun6:
  if (echo $CHK|grep $FILE >/dev/null);then  #is it there?
    if [ $(echo $CHK|sed -n "s/.* \([[:digit:]]\+\) $(basename $DIR).*/\1/p") = 0 ]; then
      #is it incorrect? (Size=0)
      echo -e "\nERROR: Backup of $DIR has zero size\n"
    else
      echo -e "\nOKAY: $DIR backed up\n"
    fi 
  else
    echo -e "\nERROR: Can't find Backup of $DIR on $HOST!\n"
  fi  
 
 else
  echo -e "$DIR skipped\n"
 fi  #End of Backup
done  #end main loop
echo "Done."


